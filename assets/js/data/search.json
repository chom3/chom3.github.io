[ { "title": "The Software Engineer Interview Process", "url": "/posts/the-software-engineer-interview/", "categories": "software engineer interview, guide", "tags": "interviewing", "date": "2021-03-07 00:00:00 +0000", "snippet": "This will be updated periodically!The Software Engineer interview is a tough and long process comprised of preparation and luck.I’ll share my experience with how the standard interview process has been and things that companies look for in the interview process.Remember that the interview process is as much as interviewing the company as it is about interviewing you!Learn to identify possible red flags and withdraw from processes if it doesn’t make sense to you.Preparing for the Application ProcessMake an Excel document or Google Sheet about your interview process.At the top I’d write your reasons for leaving your current role (if any), what you are looking to keep in your next role from your previous role (if any), and new things you are seeking in your new role.For example, I’ve had that I wanted to leave because the work life balance was poor, so I was looking for a better opportunity in that, but I also wanted to look for a team that I got along with, because I had that in my previous role.Next I’d make some columns: The company you applied to The date you applied The response The recruiter, people you have worked with throughout this process What part of the process you got up to Key Info/Glassdoor impressions The interview questions asked Any other notesThis helps you remember where you might have come up short in a previous interview, names that may come up throughout the interview process, and general information about the company that you may want to have on hand.The ResumeThe resume should fit the position. Highlight your experiences, what frameworks and technologies you’re familiar with, past projects and experience, to try to address how you are a good fit for the opening.Check over for grammatical errors.Make sure your bullet points make sense and that you can explain it (can you explain what “created an API to interface with the customer” means?).The Initial ScreeningThe recruiter should pass on your resume to a team, where the team will discuss if you’re a right fit for the position based off your initial screening and resume.The initial screening may ask you questions like: what you’re looking for in your next position, what you’re currently doing, sponsorship (if needed), salary expectations, and more.This is your chance to ask the interviewee for generic questions about the company, how large the team is, how many teams, possibility of transferring teams, how you might be assigned, and ongoing projects.The First RoundIf the initial screening makes sense for both parties, the first round interview should come up.The round mostly consists of:Talking about what you’re doing in your current role, what you have experience with, and what you’re looking for in your next role again.A potential pop quiz of software fundamentals (I call it trivia).What’s… An interface? An abstract class? Inheritance? Pass by reference? Pass by value? Garbage collection? How does it work? What are different ways that garbage collection is done?I encourage you to look these up and to write them up and give them a read.A 30-45 minute data structure/algorithm question.When practicing on something like leetcode, it’s important to understand the pattern or solution. You can sometimes get a similar quesiton but different parameters and understanding how to solve a problem will help you make adjustments.Here the interviewer ideally looks for an acceptable answer, but there are times when you can get by as long as you: Provide a logical thought process Give a solution Highlight maybe a better way that you could have done it (if your solution isn’t the best) Provide clean, modular, concise codeReasons to not move on the next round: You didn’t provide an optimal solution (unfortunately some interviewers don’t care about other metrics except the answer) You couldn’t articulate your solution (even if you provided one) - i.e. not saying anything but just immediate coding You realize that you and the interviewer have some differences in what you’re looking for in your next role You couldn’t provide a solution in generalThis is your time to also ask questions to the interviewer, who most likely works on or with the team you’re interviewing for. Ask about day-to-day activities Ask about the company in general Ask about what the interview may like or dislike about the company Write these questions down and practice them to remember them off handThe OnsiteIf you passed the first round, you’ll most likely make it to the next onsite.Note, sometimes a company may have a “second” round, where it’s just a repeat of the first round with another interviewer.The onsite consists of multiple (3-5) rounds of different topics.Prepare for: 1-2 data structure/algorithm questions A system design question A behavioral round A possible discussion with the team lead, manager, to talk about best fitsThe data structure/algorithms are just like the first rounds.The system design question is usually something about “how would you design…” I would recommend purchasing/getting a copy of Grokking the System Design Interview, or starting with the System Design Primer.Remember to write down these questions and pracitce/look them up later if you don’t pass this interview. It’s the practice you need to approach future questions.The behavioral round is sometimes written off as “non important” but it’s important to Ask more questions about the team and company Show that you’re an enjoyable person to work with, that you fit on this team Show how you would handle certain situationsRehearse possible answers, use the STAR (Situation Task Action Result) method for your answers as well.The day will take 3-4 hours and be incredibly exhausting. Remember to take appropriate bathroom and water breaks to reset your mentality for the next rounds.If you fail, don’t attribute it to being unlucky. Try to think about what went wrong so that you can get it right next time.Do you have trouble with backtracking, recursion, linked lists, etc.? Write down the questions and review them afterwards. Data structure and algorithm questions are usually different from day to day activities as a software engineer, this is something that needs to be studied or practiced.The OfferReceiving an offer is incredibly exciting! Make sure you review and think it over! If there are any red flags that stick out, feel free to reach out to the recruiter to maybe set up more meetings with the manager to see if you can clarify anything. Don’t jump into anything without being prepared!" }, { "title": "Letter Combinations of Phone Number", "url": "/posts/letter-combinations-of-phone-number/", "categories": "software engineer interview, recursion", "tags": "backtracking", "date": "2020-05-11 00:00:00 +0000", "snippet": "The Problem:Given a string containing digits from 2-9 inclusive, return all possible letter combinations that the number could represent.ImportanceI’ve encountered this exact problem in a different interview so I’m certain that backtracking is a favorite for some interviewers.Thought ProcessIt’s easy to make a mistake but you’ll generally have to know that you’ll have a base function that starts the combinations and then a private function that will be recursive and build the strings for you. Stick to that and you should be able to work it out. Luckily when we’re not actively in an interview we can take our time, look over solutions, and help internalize what the thought process is for these solutions. It’s not about memorizing the problems but understanding the thought process!First we’ll need to make it easy to access these different letter combinations. A hash map would be easiest way, when you’re given a number we should return the string that’s associated with it. HashMap&amp;lt;String, String&amp;gt; map = new HashMap&amp;lt;String, String&amp;gt;(); map.put(&quot;2&quot;,&quot;abc&quot;); map.put(&quot;3&quot;,&quot;def&quot;); map.put(&quot;4&quot;,&quot;ghi&quot;); map.put(&quot;5&quot;,&quot;jkl&quot;); map.put(&quot;6&quot;,&quot;mno&quot;); map.put(&quot;7&quot;,&quot;pqrs&quot;); map.put(&quot;8&quot;,&quot;tuv&quot;); map.put(&quot;9&quot;,&quot;wxyz&quot;);We need to initialize an arraylist to return the combinations.List&amp;lt;String&amp;gt; combinations = new ArrayList&amp;lt;String&amp;gt;();We’ll call our private function that will do all the work. We need to pass the arraylist to add to, the hash map, a starting string to build on, and the given string of digits.findCombinations(combinations, map, &quot;&quot;, digits);Finally we return the combinations.return combinations;Altogether, we know what the solution will look like, we just need to fill in the rest. public List&amp;lt;String&amp;gt; letterCombinations(String digits) { HashMap&amp;lt;String, String&amp;gt; map = new HashMap&amp;lt;String, String&amp;gt;(); map.put(&quot;2&quot;,&quot;abc&quot;); map.put(&quot;3&quot;,&quot;def&quot;); map.put(&quot;4&quot;,&quot;ghi&quot;); map.put(&quot;5&quot;,&quot;jkl&quot;); map.put(&quot;6&quot;,&quot;mno&quot;); map.put(&quot;7&quot;,&quot;pqrs&quot;); map.put(&quot;8&quot;,&quot;tuv&quot;); map.put(&quot;9&quot;,&quot;wxyz&quot;); List&amp;lt;String&amp;gt; combinations = new ArrayList&amp;lt;String&amp;gt;(); if (digits.length() != 0){ findCombinations(combinations, map, &quot;&quot;, digits); } return combinations; }Backtracking, I went wrong here and I thought it would be best to get the starting string, start a for loop, add to it, and do another loop… but we can make it much easier. We can get the first digit and retrieve the letters associated with that digit. String digit = digits.substring(0,1); String letters = map.get(digit);Then we’ll iterate through all the letters. My issue was that I was using charAt (java) when substring(i, i+1) will work just as well in our iteration. We can shave off the first character in the digits string but using substring as well. We pass on the current string with the letter appended, and the next digit. We’ll create different combinations by passing on each letter represented by a digit this way (findCombinations(“a”), findCombinations(“b”), findCombinations(“c”)… etc) are basically being done here. for (int j = 0; j &amp;lt; letters.length(); j++){ String letter = map.get(digit).substring(j, j + 1); findCombinations(combinations, map, curr+letter, digits.substring(1)); }Our end point is when we have no more digits to find. if (digits.length() == 0){ combinations.add(curr); }Solution / Putting it all togetherclass Solution { public List&amp;lt;String&amp;gt; letterCombinations(String digits) { HashMap&amp;lt;String, String&amp;gt; map = new HashMap&amp;lt;String, String&amp;gt;(); map.put(&quot;2&quot;,&quot;abc&quot;); map.put(&quot;3&quot;,&quot;def&quot;); map.put(&quot;4&quot;,&quot;ghi&quot;); map.put(&quot;5&quot;,&quot;jkl&quot;); map.put(&quot;6&quot;,&quot;mno&quot;); map.put(&quot;7&quot;,&quot;pqrs&quot;); map.put(&quot;8&quot;,&quot;tuv&quot;); map.put(&quot;9&quot;,&quot;wxyz&quot;); List&amp;lt;String&amp;gt; combinations = new ArrayList&amp;lt;String&amp;gt;(); if (digits.length() != 0){ findCombinations(combinations, map, &quot;&quot;, digits); } return combinations; } private void findCombinations(List&amp;lt;String&amp;gt; combinations, HashMap&amp;lt;String, String&amp;gt; map, String curr, String digits){ if (digits.length() == 0){ combinations.add(curr); } else { String digit = digits.substring(0,1); String letters = map.get(digit); for (int j = 0; j &amp;lt; letters.length(); j++){ String letter = map.get(digit).substring(j, j + 1); findCombinations(combinations, map, curr+letter, digits.substring(1)); } } }}Definitely easy to go wrong, but once you have the base down it’s about filling in the rest and thinking it through! As a refresher, I definitely took a look at the solutions page. I’m writing down the solutions and thought process to help me for the next time I’m faced with these problems." }, { "title": "Generate Parentheses", "url": "/posts/backtracking-generate-parentheses/", "categories": "software engineer interview, recursion", "tags": "backtracking", "date": "2020-04-27 00:00:00 +0000", "snippet": "The Problemnote: from leetcodeGiven n pairs of parentheses, write a function to generate all combinations of well-formed parentheses.Given n = 3Output:[ &quot;((()))&quot;, &quot;(()())&quot;, &quot;(())()&quot;, &quot;()(())&quot;, &quot;()()()&quot;]ImportanceThe problem itself isn’t that important to remember. The algorithm and understanding how to do the algorithm is more important. Backtracking can come up in diferent ways, usually you’ll have to keep in mind that you start the function with some data structure to hold the different combinations. You’ll then call a private function which will be used recursively to add a starting point and then branch off into different scenarios.Thought ProcessThe output example is most likely a list of strings so we can start there.List&amp;lt;String&amp;gt; result = new ArrayList&amp;lt;String&amp;gt;();// need to do somethingreturn result;Then like what was stated before, we’ll need to call a function to get our recursion started.In this case, we need to make sure we keep track of our “(“ and “)”. We can call these left “(“ and right “)”. If we initialize these values as integers, we can keep track of adding 1 to left or adding 1 to right. If left = n we stop adding left parenthesis, and if right = n we stop adding right ones.As we recurse we’ll pretty much be appending to our string, so we need to keep track of our string as we go on.When will we know when to stop?If we’re given “n pairs” then when our length is 2 * n we’ll know we’re done.We just need to know that the parentheses are well-formed, that each parentheses pair is closed properly.I think that gives us enough info on what parameters we’ll need for our recursive function.parameters: need our List&amp;lt;String&amp;gt; resultint leftint rightstring startint n //base case - we have a well formed pair, add to our result and exitif (2 * n == start.length()){ result.add(start); return;}//our number of left parenthesis is less than n//use recursion and add one to the leftif (left &amp;lt; n){ backtrack(result, left + 1, right, n, start+&quot;(&quot;);}//same for the rightif (right &amp;lt; n){ backtrack(result, left, right+1, n, start+&quot;)&quot;);}How do we start the call? With all initial values of 0&#39;s and empty strings.backtrack(result, 0, 0, n, &quot;&quot;);Solution / Putting it all together public List&amp;lt;String&amp;gt; generateParenthesis(int n) { List&amp;lt;String&amp;gt; result = new ArrayList&amp;lt;String&amp;gt;(); backtrack(result, 0,0, n, &quot;&quot;); return result; } private void backtrack(List&amp;lt;String&amp;gt; result, int left, int right, int n, String start){ if (start.length() == n*2){ result.add(start); return; } if (left &amp;lt; n){ backtrack(result, left+1, right, n, start+&quot;(&quot;); } if (right &amp;lt; left){ backtrack(result, left, right+1, n, start+&quot;)&quot;); } }" }, { "title": "Find the max depth of a binary tree", "url": "/posts/maximum-depth-binary-tree/", "categories": "software engineer interview, binary tree", "tags": "recursion", "date": "2020-04-22 00:00:00 +0000", "snippet": "The ProblemGiven a binary tree, find the maximum depth./** * Definition for a binary tree node. (From Leetcode) * public class TreeNode { * int val; * TreeNode left; * TreeNode right; * TreeNode(int x) { val = x; } * } */ 1 / \\ 2 3 /\\ 4 5 / 6Max depth is 4 1-&amp;gt;2-&amp;gt;4-&amp;gt;6ImportanceYou can use recursion here which is a good idea to keep in mind for future problems, like backtracking.The Thought ProcessSet the base case. What if the root/input is null to start with? It’d be depth 0.if (root == null){ return 0;}We know we need to call the function within the function again.. but we also need to traverse left and right nodes.So we’ll needroot.leftroot.rightBut since we made it past the base case, we need to add 1 for the extra level. We don’t know if the left or right is the one with the extra level but we just need to know if there is one or not. So we can take the max between the two.Math.max(root.left, root.right) + 1As it recurses back up we’ll just keep adding 1 per level.Solution public int maxDepth(TreeNode root) { if (root == null){ return 0; } return Math.max(maxDepth(root.left), maxDepth(root.right))+1; }" }, { "title": "Find index of a substring in a string", "url": "/posts/index-of-substring-in-string/", "categories": "software engineer interview, strings", "tags": "substring", "date": "2020-04-22 00:00:00 +0000", "snippet": "The ProblemReturn the index of the first occurrence of a substring in a string.If the length of the string is 0 return 0.If there is no match return -1.Given: abcdefdeFind &quot;de&quot;Output: 3ImportanceString manipulation questions are asked often in interview processes. I think these are necessary to be prepared especially if strings are a weakpoint.Another note is that I solved this my way, looks ike it’s O(1) space and O(N) (iterates as long as the given string) time. It could be cleaned up and optimized more.In a given interview, as long as you can explain your thought process as you write your code I believe it will be good enough.The Thought ProcessAn easy way would be to start iterating through the string and if you hit a possible match for the substring, start iterating through the substring.Then we can start setting some flags.Once we start iterating, we need to see if there’s a possible start to an answer… We can set this by using a boolean flag.Given: string s, string sub//Startint i = 0;int j = 0;int possibleAnswer = -1;boolean firstOccurrence = true;//iterate through the stringwhile( i &amp;lt; s.length()){}//how to figure out there&#39;s a possible startif (s.charAt(i) == sub.charAt(j)){ possibleAnswer = i; //possible index}We can use a flag here to set to false so we won&#39;t overwrite our possibleAnswer flagif (firstOccurrence){ possibleAnswer = i; firstOccurrence = false;}Iterate through both the string and substring:i++;j++;What happens if we don&#39;t match:We need to just move forward with ii++;But what if our j was already moving forward? We need to reset that. Also consider if we went past the answer while iterating through our i/j&#39;s - so we&#39;ll need to reset back to where we were as well. We saved our place with possibleAnswer! So we can increment 1 past that.And we need to reset our flag.if (j &amp;gt; 0){ j = 0; i = possibleAnswer + 1; firstOccurrence = true;}In the end - if j is equal to the length of the substring then we made it to the end and can just return possibleAnswer.If we did not, we return -1.Working Solutionclass Solution { public int strStr(String s, String sub) { //Quick checks if (sub.length() == 0){ return 0; } //Sub can&#39;t b e greater than the main string if (sub.length() &amp;gt; s.length()){ return -1; } int i = 0; int j = 0; int possibleAnswer = -1; boolean firstOccurrence = true; while(i &amp;lt; s.length()){ //Possible start if (s.charAt(i) == sub.charAt(j)){ if (firstOccurrence){ possibleAnswer = i; firstOccurrence = false; } i++; j++; } else { //Reset or keep going if (j &amp;gt; 0){ i = possibleAnswer + 1; firstOccurrence = true; j = 0; } else { i++; } } //At the end if (j == sub.length()){ return possibleAnswer; } } //No match return -1; }}" }, { "title": "Find the product of each array&#39;s indice except for that indice", "url": "/posts/product-of-array-except-self/", "categories": "software engineer interview, lists", "tags": "array", "date": "2020-04-21 00:00:00 +0000", "snippet": "The ProblemGiven an array nums of n integers where n &amp;gt; 1, return an array output such that output[i] is equal to the product of all the elements of nums[i].*Without using division.Input: [1,2,3,4]Output: [24,12,8,6]ImportanceI don’t think this is that important of an algorithm to know off the top of your head. It’s more for problem solving and being able to use constant time and space.Doing these questions often usually help think about optimal solutions, but I think this is a pretty unique situation.The Thought ProcessIn this case, we can’t use division, so we can break it down into 2 parts.Imagine having a new array:New: [1,1,1,1]Given: [1,2,3,4]We need to multiply each new indice, essentially, by everything to the right and left of the same indice in the given array.new[0] = given[1] * given[2] * given[3]new[1] = given[0] * given[2] * given[3]new[2] = given[0] * given[1] * given[3]new[3] = given[0] * given[1] * given[2]So how about we set up two for loops and two arrays?RIGHT:new[0] = given[1] * given[2] * given[3]new[1] = given[2] * given[3]new[2] = given[3]new[3] = 1LEFT:new[0] = 1new[1] = given[0]new[2] = given[0] * given[1]new[3] = given[0] * given[1] * given[2]One can handle all the multiplication to the left and one can handle all the multiplication to the right.A final array that handles the multiplication of each indice of left and right should be equal to our answer!The Solutionpublic int[] productExceptSelf(int[] nums){ int[] left = new int[nums.length]; int[] right = new int[nums.length]; int[] answer = new int[nums.length]; left[0] = 1; // no elements to the left of index 0, so this should be set to 1 right[nums.length - 1] = 1; // same deal for (int i = 1; i &amp;lt; nums.length; i++){ left[i] = left[i-1] * nums[i-1]; } for (int i = nums.length - 2; i &amp;gt;= 0; --i){ right[i] = right[i+1] * nums[i+1]; } for (int i = 0; i &amp;lt; nums.length; i++){ answer[i] = left[i] * right[i]; } return answer;}ImprovementsWhile I think the solution should be perfectly valid, O(N) space and time complexity. You’re using arrays that are as large as the given array is and the time it takes to complete is as long as the given array is.We can also imagine what if we are only given an answer array and are not able to generate new arrays to help with the right/left multiplication.We can just iterate through our initial array going from the left (or right).We’ll have, in our new array, just the lefts.LEFT:new[0] = 1new[1] = given[0]new[2] = given[0] * given[1]new[3] = given[0] * given[1] * given[2]Now for the right:We can initialize a variable equal to 1.As we go to the next index, we can just multiply our variable by that current index and build upon it to have the same value.RIGHT:new[0] = given[1] * given[2] * given[3]new[1] = given[2] * given[3]new[2] = given[3]new[3] = 1this is the same as:int r = 1;for (int i = nums.length - 1; i &amp;gt;= 0; --i){ r *= nums[i];}Then we can multiply each of the answer array’s indices by the number r to get the full product.public int[] productExceptSelf(int[] nums){ int[] answer = new int[nums.length]; answer[0] = 1; // no elements to the left of index 0, so this should be set to 1 for (int i = 1; i &amp;lt; nums.length; i++){ answer[i] = answer[i-1] * nums[i-1]; } int r = 1; for (int i = nums.length - 1; i &amp;gt;= 0; --i){ answer[i] = answer[i] * R; r *= nums[i]; } return answer;}" }, { "title": "Finding First Unique Character in a String", "url": "/posts/finding-first-unique-character/", "categories": "software engineer interview, strings", "tags": "algorithm", "date": "2020-04-16 00:00:00 +0000", "snippet": "The problem:Assuming a string in all lowercase.Given a string, find the first non-repeating character in it and return the index (or character). If it doesn’t exist, return -1.given: abcdabcOutput: 3 or dImportanceI think the highlight here is to know your ASCII. With all lower case letters, ‘a’ to int is the value 97. ‘z’ is 122. Subtracting any lowercase letter by ‘a’ will give 0-25 as a value. This can help you solve the problem with 0(1) constant space by using an array of size 26.The Thought ProcessWe need an array the size of all lower case letters (or adjusted if non-lowercase, we can set everything to lower case, etc.)Iterate through the string and increment any letters in the array that are in the string.iterate through the string again and any letter that returns the value 1 is our index/letter.The Solutionpublic int firstUniqChar(String s){ int[] letters = new int[26]; for (int i = 0; i &amp;lt; s.length(); i++){ letters[s.charAt(i) - &#39;a&#39;]++; } for (int i = 0; i &amp;lt; s.length(); i++){ if (letters[s.charAt(i) - &#39;a&#39;] == 1){ return i; // return letters[i]; } } return -1;}" }, { "title": "Deleting a LinkedList Node", "url": "/posts/deleting-linkedlist-node/", "categories": "software engineer interview, linkedlist", "tags": "linkedlist", "date": "2020-04-12 00:00:00 +0000", "snippet": "The problem:Given a node, remove it from the linked list.public class ListNode{ int val; ListNode next; ListNode(int x){ val = x; }}1-&amp;gt;2-&amp;gt;3Given node with value 2Output:1 -&amp;gt; 3ImportanceKnowing this off the top of my head was huge for designing a least recently used cache. I was able to do a delete this node and create a new node to place at the top fairly easily by having this in mind.It’s a relatively simple question with a simple solution, so having the instant solution for this in your back pocket will help you not waste time during any interview questions.The Thought ProcessYou can be a little hacky and not totally delete, but replace this node’s value with the next value, and skip over the next node.You’ve effectively written over your current node with the next node and changed the pointer to next to the node after.The Solutionpublic void deleteNode(ListNode node){ node.val = node.next.val; node.next = node.next.next;}" }, { "title": "Find a Cycle in a LinkedList", "url": "/posts/linkedlist-cycle/", "categories": "software engineer interview, linkedlist", "tags": "linkedlist", "date": "2020-04-05 00:00:00 +0000", "snippet": "The problem:Given a linked list, determine if it has a cycle in it.Given:ListNode { int val; ListNode next; ListNode(int val){ this.val = val; }}1-&amp;gt;2-&amp;gt;3 ^--v Should be a cycle because after node with value 3, you&#39;ll go back to node with value 2.ImportanceOpening your mind to the slow/fast (Tortoise and the Hare) method is a great approach to solving many different problems.You might be asked to find a cycle in a tree, determine if it is a tree, etc.The Thought ProcessThe key is to use two pointers at the start of the list. One goes forward one node, the other two nodes.If there is a cycle, both pointers will eventually be equal.If not, then you will eventually hit the null end.1 -&amp;gt; 2 -&amp;gt; 3 ^----vBoth pointers start at 1.Turtle -&amp;gt; 1 -&amp;gt; 2 -&amp;gt; 3Hare -&amp;gt; 1 -&amp;gt; 3 -&amp;gt; 31 -&amp;gt; 2-&amp;gt; 3Turtle -&amp;gt; 1 -&amp;gt; 2 -&amp;gt; 3 -&amp;gt; NULLHare -&amp;gt; 1 -&amp;gt; 3 -&amp;gt; NULLSince our hare pointer is going to be going two at a time, it should check if it’s currently null or it’s next value will be null.We have to remember to be careful of not letting the pointers going two at a time to be caught looking for the next value of an already null object!The Solution public boolean hasCycle(ListNode head) { //Some basic check for the extreme cases. //Everything is null? No cycle. //There is no next value after the starting node? No cycle. if (head == null || head.next == null){ return false; } ListNode turtle = head; ListNode hare = head; while (hare != null &amp;amp;&amp;amp; hare.next != null){ turtle = turtle.next; hare = hare.next.next; if (turtle == hare){ return true; } } return false; }" }, { "title": "Reverse a LinkedList", "url": "/posts/reverse-linkedlist/", "categories": "software engineer interview, linkedlist", "tags": "linkedlist", "date": "2020-04-05 00:00:00 +0000", "snippet": "The problem:Given a singly linked list, reverse it.Given:ListNode { int val; ListNode next; ListNode(int val){ this.val = val; }}Sample LinkedList: 1-&amp;gt;2-&amp;gt;3-&amp;gt;4-&amp;gt;5-&amp;gt;NULLSample Output:5-&amp;gt;4-&amp;gt;3-&amp;gt;2-&amp;gt;1-&amp;gt;NULLImportanceI don’t believe I’ve been asked to outright reverse a linkedlist during an interview process, but I’ve encountered questions where knowing the answer to this should relieve time if you knew how to do it off the top of your head. Questions can build on this by asking “reverse a sublist”. Knowing the algorithm for this gives you some foundation for the solution.The Thought ProcessThe key is to use temporary nodes to hold the values!We know we need to make our first node’s next value point to NULL.We need to be able still iterate forward.Iterate would mean that we need to start a loop, from the start of the linkedlist until the end.How to iterate:while (start != null){ start = start.next;}The algorithm://Starting pointstart.val = 1//Starting pointprevious node = NULL//Set our next to point backwards (NULL)start.next = previous node//Set our backwards point to move up to our current point (ListNode 1)previous node = start//Move our starting point forward because our dummy node held that valuestart = dummy node (the value is 2)What this has done is effectively changed the list to1 -&amp;gt; NULLAs we&#39;ve broken the link between 2-&amp;gt;3-&amp;gt;4-&amp;gt;5, as we continue through each node reversing, we&#39;ll see2 -&amp;gt; 1 -&amp;gt; NULLand so on....By the time we get to the end, start will be null because we iterated all the way to the end.Our previous ListNode which has been holding the values for us will be our starting point so we&#39;ll need to return that instead.The Solution (Java) public ListNode reverseList(ListNode head){ ListNode start = head; ListNode previous = null; while (start != null){ ListNode dummy = start.next; start.next = previous; previous = start; start = dummy; } return previous; }" }, { "title": "Getting Started in Fitness", "url": "/posts/getting-started-fitness/", "categories": "gym, beginner's guide", "tags": "fitness", "date": "2020-03-01 00:00:00 +0000", "snippet": "How do I get started with physical fitness? Getting started on understanding yourself and how your body reacts to different types of activities is a long and confusing journey. I’m here to offer some tips to lay some fundamental groundwork to get started.Fitness is a major key for overall self growthAbout You You want to make a change but just don’t know where to start.The key is that you want to change. I can’t force you, but I can offer some advice and help.I also assume you’re healthy enough to go to the gym and don’t have any lingering health issues. Rehab should have a different and professional approach!About Me:I started working out in my freshman year of college and I didn’t know what I was doing. My friends helped me start at our university gym and I took an interest in just turning my life around.In the summer of rising into my senior year, I decided I want to gain and lose weight at the same time, it didn’t work as well as I had hoped and progress was slowed.In my senior year I injured myself and had to work around these injuries.In my first year out of college, I made huge progress in figuring out my fitness goals and achieving smaller sub-goals.Currently I’m working on some other goals of mine but fitness has played a large role in keeping myself consistent and accountableMaxes (169 lb bodyweight)245 Bench325 Squat405 Deadlift150 OHPI. IntroductionAn open mind is huge for growth. Ask for criticism. Ask for feedback. Remember that criticism and feedback from a person you respect is not an attack on your character. Use it for improvement.Why is fitness the focus of this guide? I think consistently working out teaches you a certain level of discipline that can carry over to your mentality outside of the gym. Forming healthy habits and daily schedules helps simplify so you can focus on the complexities in your life.“I gotta get my shit together”“Yeah I have to start working out”“I don’t have the time”I think we’ve all been guilty of saying these words at some point or another!My thoughts:“Gotta” / “have to” are close to the solution. Acknowledging the problem is key, you just need to act on it.“I don’t have the time” just means “this new thing isn’t a higher priority over the other tasks in my life”. You need to ask yourself “what are my priorities?” at this point. 30 minutes of physical activity a day will go a long way for you, it doesn’t have to be a time consuming activity at the gym.This guide is intended to give a basic understanding on adding fitness into your lifestyle as well as giving you the tools to do more research. These are pointers to be used to help you not feel overwhelmed by everything you read online as well as dispelling some common broscience myths that people exaggerate.Your results reflect your effort.My personal recommendation is to learn to go to the gym by yourself. Having a workout buddy is fun but then you lose focus or you depend on your buddy to go to the gym with you. Learn to work out on your own, create your own game plan at the gym, and then you can take a friend along. Understand yourself, your needs, and how you react before you start adapting to other’s routines.Remember that people go to the gym for self improvement. Working out is the most selfish thing that you can do and no one will CARE. You’re working out to make yourself better than you were yesterday.II. Determining your goals and common sayingsI wanna look “tone” and “lean” and you don’t “wanna get too big”.You won’t because these big bodybuilders spent their entire lives getting to where they are now. You, as a beginner, will need to work out consistently with optimal nutrition and training to even approach this point. So I wouldn’t worry about it.What I’ve heard:“I don’t have time to workout :(“ - I’m sure you do. You just don’t want to make time. You can work it in.“I don’t workout my legs cause I need my legs to walk the next day ha ha ha” - You don’t have to, do whatever you want, I’m just here to tell you it’s important to be fit. You’ll figure it out later.“I heard I can do high volume light weight and i’ll look like __!!” -There’s some truth to this, but that doesn’t mean do 1,000 sets of 1 lb, it won’t really achieve the same effect. Balance is key.“I don’t really want to be a powerlifter and lift heavy weights…”Bodybuilders lift heavy. Powerlifters lift heavy.Lifting heavy tears the muscle cells and your muscles respond by rebuilding into bigger muscles.Lifting a lot of volume releases hormones that make your muscles grow bigger too.These two go hand in hand.No one starts skinny and squats 500 lbs. You have to eat. You have to build muscle. You have to be in the gym consistently.Starting points for goals: I’m overweight and want to lose weight - but I don’t really care about muscle building. This is fair and valid! Watch what you eat, do some cardio, swim, bike, jog (if your knees can handle it). Eat at a caloric deficit and you’ll surely lose weight. Weight is done in the kitchen and the gym just helps supplement your cardiovascular health. I’m overweight and want to replace it with muscle. This was me! You can abuse the fact that you’re heavier and able to lift more weight than someone starting out at skinnier weight can. Eat right, work hard, and be consistent. I’m underweight and want to gain muscle. Yep! Eat more. Go to the gym and workout. I’m underweight and want to stay underweight Why r u here Woah woah wait, I’m a girl… You’re a girl, so you don’t have fitness goals? Progress and starting weight may be different, but you’re no different from anyone else. Gains don’t discriminate. I wanna do crossfit Not my thing Olympic lifting? Also not my thing I wanna work on insert sport here These take different types of workouts. Probably consulting a coach or doing more research might help you. Wanna jump higher for basketball? Maybe do some box jumps. Wanna be a better swimmer? Swim more, do other swimming related workouts. Wanna be a better runner? You’re gonna have to run more. Point is that you should do your research for the field of interest that you want to work on. III. Forming Your ProgramA huge learning source for me is just Google. Reddit. Youtube. They have a ton of good beginner programs for working out and I think these are key to starting out.*What should the program have? What should I be looking for?*An obvious progression scheme. You want to make sure you’re improving!Decent volume. Can’t be a one and done.A good spread of hitting muscle groups. Legs are important.Looks like it will accomplish your goals. Maybe you’re training for a marathon, I don’t think working out your arms everyday is the targeting you’re looking for.IV. Nutrition &amp;amp; SleepSleep is so, so, so, so, so important. Try to get those 8 hours a night. Try to be consistent. Sleep helps your muscles grow and you don’t even need to do anything!If you’re skinny, you need to eat smart.If you want to put on muscle, you need to eat smart.If you’re obese and want to lift more, you need to eat smart.Eat protein, eat carbs, stay within your calories if you’re counting. Learn serving sizes. One serving size of pasta is A LOT smaller than you think.Eat your vegetables.Make sure you eat SMART. Get your nutrients. Eat food in moderation. It’s the holidays and you want to feast? It’s okay. Don’t fall off the wagon and mess up all your progress though. Stay consistent, eat smart, treat yourself, and your body will thank you.Fitness and health is a lifestyle, you can’t hit your goal and then just give up and binge eat. Well, you can, but.. why?Eat your vegetables.Those goals of yours? It’s a marathon to attain them. You might eventually set new goals. This whole thing is not a race, you’re can’t beat anyone at accomplishing your OWN goals.Note:One serving size of cereal is A LOT smaller than you think.If you don’t see results (weight gain/weight loss) after many weeks of eating, YOU ARE WRONG WITH YOUR FOOD ESTIMATES. Buy a kitchen scale, weigh your food, learn your daily caloric intake.Also, don’t forget to drink enough water. Drink more if you’re bigger, and drink more if you’re exercising.Stay hydrated.Eat your vegetables.Take care of your body and it will carve itself into a goddamn statue.Wanna eat fast food everyday? Then you’ll look like a guy who eats fast food everyday. If you want to count your calories, buy a scale, use myfitnesspal or something and TRACK what you eat. It’s all for you. You ate a salad and now you can eat cheesecake? Sure, only you really have to know. Are you not seeing progress because of that? The results don’t lie.Your results reflect your effort.V. Working OutMAKE SURE YOUR FORM IS GOOD.Form can break down sometimes at heavy weights like a one rep max. It happens. That’s ok.But form check. Practice your lifts. Take a video.Hit proper depth on your squat.Make sure you bench correctly by retracting your scapula.Stay tight, don’t let your hips shoot up on deadlifts.DON’T BE AFRAID TO ASK.“Hey man, did I hit depth?”“Hey man, can you spot me?”“Hey can you check this vid of me deadlifting and tell me what you think?”No one judges you at the gym for needing help. People would be glad to help you. Everyone starts from somewhere.Quick links for form tutorials:SquatBench PressDeadliftStarting youtube source material that I follow:Omar IsufAlan ThrallJonnie CanditoScott HermanMark BellSometimes you might come across conflicting information and that’s okay. Try to see what works for you. Be willing to experiment and fail. There’s no one size fits all way of doing things! You need to make it work for you.VI. Equipment and SupplementsDo I need a belt?Do I need wrist straps?Do I need wrist wraps?Do I need knee sleeves?Do I need preworkout?Do I need protein powder?What are BCAAS?!There’s a ton of “do I need”. If you have the funds, yeah sure, get it. There’s sales, great brands to do your research on.A belt can help you brace your core better, but make sure to get a good one. Those velcro ones are awful. Belts don’t protect you from injury, but they can teach you how to brace yourself properly or help keep you braced for that extra weight to lift.Wrist straps help you lift more weight when your grip doesn’t allow you to, it helps.Wrist wraps help support your wrists which support more weight.Preworkout is that caffeine kick that helps you get pumped for the gym, sometimes you might need it, sometimes you don’t.Protein powder is great for fitting in your diet, usually it’s very little calories for a bunch of protein. This is good for everyone since they’re trying to build more muscle!BCAAs (branched-chain amino acids) are broken down proteins that give your muscles that extra energy source. Supplementing your diet with BCAAs may also help you recover from your workouts more quickly. They can help if you want it.Conclusion here is that if you want it or think you need it and have the disposable income, get it. None of these are mandatory, but they can help.VII. ResultsDon’t expect results to be immediate overnight. You did some ab workout, you think you’ll have a 6pack in the morning?Changes take time, things slowly take shape.“I’ve been doing this for a month and I don’t see a difference”How long did you spend your life getting to where you are right now? Do you think a month of this changed life is going to undo all of that?Fitness is a lifestyle. If you go consistently, you will see results. If you go 3 times a month you’ll never make progress at all.“I go constantly and sometimes I have bad days..”Happens. Think about why you had a bad day. Not enough sleep? Didn’t eat enough? Stressed out from something else? Help yourself have a good session the next time.VIII. ConclusionFitness is something that becomes a daily driver in your life.Don’t be afraid to ask for help.Don’t be afraid to experiment and fail. Avoid paralysis analysis.Sleep.Eat smart.Eat your vegetables.Be conscious of your form.It’s a marathon, not a race." } ]
